<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qytangt</title>
  
  
  <link href="https://qytangt.github.io/atom.xml" rel="self"/>
  
  <link href="https://qytangt.github.io/"/>
  <updated>2020-10-20T16:25:33.208Z</updated>
  <id>https://qytangt.github.io/</id>
  
  <author>
    <name>Qytangt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C# 水仙花数</title>
    <link href="https://qytangt.github.io/2020/10/21/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/"/>
    <id>https://qytangt.github.io/2020/10/21/%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/</id>
    <published>2020-10-20T16:06:29.000Z</published>
    <updated>2020-10-20T16:25:33.208Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=837841669,1753082975&fm=11&gp=0.jpg"></p><h1 id="Topic"><a href="#Topic" class="headerlink" title="Topic:"></a>Topic:</h1><p>输出所有的“水仙花数”，所谓的“水仙花数”是指一个三位数其各位数字的立方和等于该数本身，例如153是“水仙花数”，因为：153 = 13 + 53 + 33。根据“水仙花数”的定义，判断一个数是否为“水仙花数”，最重要的是要把给出的三位数的个位、十位、百位分别拆分，并求其立方和（设为s），若s与给出的三位数相等， 三位数为“水仙花数”，反之，则不是。</p><h1 id="Answer"><a href="#Answer" class="headerlink" title="Answer:"></a>Answer:</h1><pre><code>#算法设计</code></pre><p>“水仙花数”是指满足某一条件的三位数，根据这一信息可以确定整数的取值范围是 100〜999。对应的循环条件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(n=10; n&lt;1000; n++)</span><br><span class="line">&#123;</span><br><span class="line">    //......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对代码的说明：<br>将n整除以100，得出n在百位上的数字hun。<br>将（n-i*100)整除以10(或将n先整除以10再对10求模n/10%10),得出n在十位上的数字ten。<br>将n对10取余，得出n在个位上的数字ind。<br>求得这三个数字的立方和是否与其本身相等，若相等，则该数为水仙花数。</p><p>对于每个位置上的数值将其拆分的算法有很多种，根据不同情况选择不同算法（对于同一问题不同算法的效率有时会相差很多）。</p><p>下面是完整的代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int hun, ten, ind, n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;result is:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>( n=100; n&lt;1000; n++ )  /*整数的取值范围*/</span><br><span class="line">    &#123;</span><br><span class="line">        hun = n / 100;</span><br><span class="line">        ten = (n-hun*100) / 10;</span><br><span class="line">        ind = n % 10;</span><br><span class="line">        <span class="keyword">if</span>(n == hun*hun*hun + ten*ten*ten + ind*ind*ind)  /*各位上的立方和是否与原数n相等*/</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   </span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：<br>result is:153  370  371  407</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=837841669,1753082975&amp;fm=11&amp;gp=0.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Topic&quot;&gt;&lt;a href=&quot;#To</summary>
      
    
    
    
    <category term="作业" scheme="https://qytangt.github.io/categories/%E4%BD%9C%E4%B8%9A/"/>
    
    
    <category term="作业" scheme="https://qytangt.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>C# 将“China”译成密码</title>
    <link href="https://qytangt.github.io/2020/10/18/newpapername/"/>
    <id>https://qytangt.github.io/2020/10/18/newpapername/</id>
    <published>2020-10-18T07:06:29.000Z</published>
    <updated>2020-10-18T10:14:20.838Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://mengfen.com/wp-content/uploads/2020/08/2020081902403970.jpg"></p><h1 id="Topic"><a href="#Topic" class="headerlink" title="Topic:"></a>Topic:</h1><p>密码规律是：用原来的字母后面第4个字母代替原来的字母。例如，字母“A”后面第4个字母是“E”，用“E”代替“A”。因此，“China”应译为“Glmre”。请编一程序，用赋初值的方法使c1，c2，c3，c4，c5五个变量的值分别为‘C’‘h’‘i’‘n’‘a’.经过运算，使c1，c2，c3，c4，c5分别变为‘G’‘l’‘m’‘r’‘e’，并输出。</p><h1 id="Answer"><a href="#Answer" class="headerlink" title="Answer:"></a>Answer:</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">char c1=<span class="string">&#x27;C&#x27;</span>,c2=<span class="string">&#x27;h&#x27;</span>,c3=<span class="string">&#x27;i&#x27;</span>,c4=<span class="string">&#x27;n&#x27;</span>,c5=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">c1+=4;</span><br><span class="line">c2+=4;</span><br><span class="line">c3+=4;</span><br><span class="line">c4+=4;</span><br><span class="line">c5+=4;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c%c%c%c%c\n&quot;</span>,c1,c2,c3,c4,c5);</span><br><span class="line"><span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://mengfen.com/wp-content/uploads/2020/08/2020081902403970.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Topic&quot;&gt;&lt;a href=&quot;#Topic&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="作业" scheme="https://qytangt.github.io/categories/%E4%BD%9C%E4%B8%9A/"/>
    
    
    <category term="作业" scheme="https://qytangt.github.io/tags/%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客搭建(转)</title>
    <link href="https://qytangt.github.io/2020/10/11/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://qytangt.github.io/2020/10/11/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
    <published>2020-10-10T16:04:55.000Z</published>
    <updated>2020-10-18T07:25:25.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><h1 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h1><p>Hexo基于Node.js，Node.js下载地址：<a href="https://link.zhihu.com/?target=https://nodejs.org/en/download/">Download | Node.js</a> 。</p><p>安装后，检测Node.js是否安装成功，在命令行中输入 node -v :</p><p><img src="https://pic1.zhimg.com/v2-76ea38e9545e606f975781e47933b010_b.jpg" alt="img"></p><p>检测npm是否安装成功，在命令行中输入npm -v :</p><p><img src="https://pic2.zhimg.com/v2-bede250b8456df92475b455fda8c1dd9_b.jpg" alt="img"></p><p>如果命令行没有显示相对于的版本号，就需要手动配置环境。</p><p>手动配置环境的步骤为：找到node.js的文件夹，复制路径，打开环境变量配置Path属性，将复制的地址粘贴进去。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>这里需要自己在电脑常里创建一个文件夹，可以命名为hexo，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，在上面的路径输入cmd加回车进入命令行。</p><p><img src="https://pic1.zhimg.com/v2-a5450a466c0927c25dff8ad6f1d2046c_b.jpg" alt="img"></p><p>使用npm命令安装Hexo，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><p>这个安装时间较长耐心等待，安装完成后什么变化都没有，因为只是安装了个框架，要再初始化我们的博客，（这一步要事先安装git，不然会报错，而且也要等挺久的）输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><p>注意，这里的命令都是作用在刚刚创建的hexo文件夹中，要在命令行进入文件夹才可以执行这些命令。安装完毕后刚刚新建的文件夹会多一个文件出来。</p><p>然后进入多出来的文件夹里面。</p><p>为了检测我们的网站雏形，分别按顺序输入以下四条命令：</p><p>hexo n  “我的博客” == hexo new  “我的博客”   #新建文章<br>hexo g == hexo generate   #生成<br>hexo s == hexo server   #启动服务预览</p><p>hexo d == hexo deploy   #部署（这一步待会再做）</p><p>这些命令在后面作介绍，完成后，打开浏览器输入地址：</p><p>localhost:4000</p><h2 id="部署到码云，让大家都能访问你的网站"><a href="#部署到码云，让大家都能访问你的网站" class="headerlink" title="部署到码云，让大家都能访问你的网站"></a>部署到码云，让大家都能访问你的网站</h2><p>注册码云账号，右上角+号新建仓库。</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011153311991.png"></p><p>进入根目录下的_config.yml，找到deploy那一行，输入：</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011154549696.png"></p><p>再ctrl+f搜索url，找到这一行：</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011160005944.png"></p><p>修改为自己仓库的地址：</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011155948282.png"></p><p>安装部署插件，输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>输入三条命令（hexo d即hexo deploy）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>这时候刷新一下仓库页面，就可以看到仓库多出来一些文件了。</p><p>然后再点击上边的gitee pages服务，强制使用HTTPS（否则部分浏览器会判定链接不安全，网站的显示会出问题），点击更新，完成后点击上面的地址就可以进入自己的博客了。</p><p>这个网址可以供给任何人访问。</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011155101851.png"></p><p>一般来说，都是先在本地部署，用hexo s查看自己的博客情况，确认无误后再上传，无需频繁更新。</p><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>在你的博客根目录打开cmd,输入下面的命令，进行框架安装。(命令行的复制ctrl+c后，只要在命令行右键即可完成复制，而不是ctrl+v)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo<span class="literal">-theme</span><span class="literal">-butterfly</span></span><br></pre></td></tr></table></figure><h2 id="應用主題"><a href="#應用主題" class="headerlink" title="應用主題"></a>應用主題</h2><p>这里可以使用记事本打开yml文件（Vscode,Hbuilder之类的也可以）。</p><p>修改站点配置文件_config.yml，把主题改为butterfly</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><h2 id="安裝插件"><a href="#安裝插件" class="headerlink" title="安裝插件"></a>安裝插件</h2><p>安装pug 以及 stylus 的渲染器。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo<span class="literal">-renderer</span><span class="literal">-pug</span> hexo<span class="literal">-renderer</span><span class="literal">-stylus</span> -<span class="literal">-save</span></span><br></pre></td></tr></table></figure><h2 id="复制主题配置文件"><a href="#复制主题配置文件" class="headerlink" title="复制主题配置文件"></a>复制主题配置文件</h2><p>把主题文件夹中的 _config.yml 复制到 Hexo 根目录，同時重新命名为 _config.butterfly.yml。</p><p>以後只需要在 _config.butterfly.yml進行配置就行。</p><h2 id="菜单列表"><a href="#菜单列表" class="headerlink" title="菜单列表"></a>菜单列表</h2><p>打开_config.butterfly.yml，在里面找到menu这一行，将这些注释去掉，就可以把菜单解放出来。</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011163245587.png"></p><p>然后在命令行，ctrl+c终止进程，然后再次hexo s部署到本次，就可以看到菜单栏出现了。</p><p>左边的蓝色英文是可以任意更改的，一般改成相对应的中文翻译。框架主要通过中间的archives等关键字识别，赋予功能。</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011163543769.png"></p><h2 id="更换网站的图片信息"><a href="#更换网站的图片信息" class="headerlink" title="更换网站的图片信息"></a>更换网站的图片信息</h2><p>在_config.butterfly.yml里面搜索avatar</p><p>输入图片地址可以更改头像。</p><p>index_img是设定主页顶部图像，default_top_img是设定默认的顶部图。</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011164318929.png"></p><p>背景图：</p><p>搜索background，输入图片地址</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011164901081.png"></p><h2 id="更改自己的个人信息"><a href="#更改自己的个人信息" class="headerlink" title="更改自己的个人信息"></a>更改自己的个人信息</h2><p>在_config.yml更改自己的个人信息。</p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011165427405.png"></p><p><img src="https://cdn.jsdelivr.net/gh/LionHeart-o/hexo/blogimg/image-20201011165850539.png"></p><h2 id="标签（tags）页"><a href="#标签（tags）页" class="headerlink" title="标签（tags）页"></a>标签（tags）页</h2><ol><li><p>到 Hexo 博客的根目录</p></li><li><p>命令行输入<code>hexo new page tags</code></p></li><li><p>修改<code>source/tags/index.md</code>文件</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &quot;tags&quot;（添加项）</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol><h2 id="分类（categories）页"><a href="#分类（categories）页" class="headerlink" title="分类（categories）页"></a>分类（categories）页</h2><p>基本同上。</p><ol><li><p>到 Hexo 博客的根目录</p></li><li><p>命令行输入<code>hexo new page categories</code></p></li><li><p>修改<code>source/categories/index.md</code>文件</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-01-05 00:00:00</span><br><span class="line">type: &quot;categories&quot;（添加项）</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装git&quot;&gt;&lt;a href=&quot;#安装git&quot; class=&quot;headerlink&quot; title=&quot;安装git&quot;&gt;&lt;/a&gt;安装git&lt;/h1&gt;&lt;h1 id=&quot;安装node-js&quot;&gt;&lt;a href=&quot;#安装node-js&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://qytangt.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="博客搭建" scheme="https://qytangt.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
